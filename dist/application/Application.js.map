{"version":3,"sources":["../../src/application/Application.js"],"names":["Application","app","router","express","Router","configuration","port","connectionString","databaseName","applicationHostName","os","hostname","use","bodyParser","urlencoded","extended","json","connectDatabase","loadRoutes","listen","process","env","PORT","console","log","MongoClient","connect","useNewUrlParser","err","client","getConfig"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AAEA;;;;;;;;IAEqBA,W;AACjB,2BAAc;AAAA;;AACV,aAAKC,GAAL,GAAW,wBAAX;AACA,aAAKC,MAAL,GAAcC,kBAAQC,MAAR,EAAd;AACA,aAAKC,aAAL,GAAqB;AACjBC,kBAAM,IADW;AAEjBC,8BAAkB,uDAFD;AAGjBC,0BAAc,cAHG;AAIjBC,6CAA+BC,aAAGC;AAJjB,SAArB;AAMH;;;;+BAEM;AAAA;;AACH,iBAAKV,GAAL,CAASW,GAAT,CAAaC,qBAAWC,UAAX,CAAsB,EAAEC,UAAU,IAAZ,EAAtB,CAAb;AACA,iBAAKd,GAAL,CAASW,GAAT,CAAaC,qBAAWG,IAAX,EAAb;AACA,iBAAKf,GAAL,CAASW,GAAT,CAAa,qBAAb;;AAEA,iBAAKK,eAAL;AACA,iBAAKC,UAAL;;AAEA,iBAAKjB,GAAL,CAASkB,MAAT,CAAgBC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,KAAKjB,aAAL,CAAmBC,IAAvD,EAA6D,YAAM;AAC/DiB,wBAAQC,GAAR,8BAAsCJ,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,MAAKjB,aAAL,CAAmBC,IAA7E;AACH,aAFD;AAGH;;;qCAEW;AACR,iBAAKL,GAAL,CAASW,GAAT,CAAa,GAAb,EAAkB,KAAKV,MAAvB;AACA,kCAAa,KAAKA,MAAlB;AACH;;;0CAEiB;AACduB,iCAAYC,OAAZ,CAAoB,KAAKrB,aAAL,CAAmBE,gBAAvC,EAAyD,EAAEoB,iBAAiB,IAAnB,EAAzD,EAAoF,UAACC,GAAD,EAAMC,MAAN,EAAiB;AACjG,oBAAG,CAACD,GAAJ,EAAQ;AACJL,4BAAQC,GAAR,CAAY,cAAZ;AACH,iBAFD,MAEO;AACHD,4BAAQC,GAAR,CAAYI,GAAZ;AACH;AACJ,aAND;AAOH;;;oCAEkB;AACf,gBAAItB,OAAOc,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,KAAKQ,SAAL,GAAiBxB,IAAhD;;AAEA,gBAAGA,QAAQ,EAAX,EAAc;AACV,qBAAKD,aAAL,CAAmBI,mBAAnB,eAAmDC,aAAGC,QAAtD,SAAkEL,IAAlE;AACH;;AAED,mBAAO,KAAKD,aAAZ;AACH;;;;;;kBAhDgBL,W","file":"Application.js","sourcesContent":["import express from 'express';\r\nimport bodyParser from 'body-parser';\r\nimport { MongoClient } from 'mongodb';\r\nimport cors from 'cors';\r\nimport os from 'os';\r\n\r\nimport planetRoutes from '../routes/planet.route';\r\n\r\nexport default class Application {\r\n    constructor() { \r\n        this.app = express();\r\n        this.router = express.Router();\r\n        this.configuration = {\r\n            port: 9000,\r\n            connectionString: \"mongodb+srv://root:root@maincluster-bzgfm.mongodb.net\",\r\n            databaseName: \"b2wChallenge\",\r\n            applicationHostName: `http://${os.hostname}`\r\n        };\r\n    }\r\n\r\n    init() {\r\n        this.app.use(bodyParser.urlencoded({ extended: true }));\r\n        this.app.use(bodyParser.json());\r\n        this.app.use(cors());\r\n        \r\n        this.connectDatabase();\r\n        this.loadRoutes();\r\n\r\n        this.app.listen(process.env.PORT || this.configuration.port, () => {\r\n            console.log(`Server running on port ${process.env.PORT || this.configuration.port}`);\r\n        });\r\n    }\r\n\r\n    loadRoutes(){\r\n        this.app.use('/', this.router);\r\n        planetRoutes(this.router);\r\n    }\r\n\r\n    connectDatabase() {\r\n        MongoClient.connect(this.configuration.connectionString, { useNewUrlParser: true }, (err, client) => {\r\n            if(!err){\r\n                console.log(\"MongoDB - OK\");\r\n            } else {\r\n                console.log(err);\r\n            }\r\n        });\r\n    }\r\n\r\n    static getConfig() {\r\n        let port = process.env.PORT || this.getConfig().port;\r\n\r\n        if(port != 80){\r\n            this.configuration.applicationHostName = `http://${os.hostname}:${port}`;\r\n        }\r\n\r\n        return this.configuration;\r\n    }\r\n}"]}