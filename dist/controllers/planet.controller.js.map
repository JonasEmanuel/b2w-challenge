{"version":3,"sources":["../../src/controllers/planet.controller.js"],"names":["request","response","planetRepository","findAll","planets","json","status","planet","Planet","name","body","climate","terrain","console","log","starWarsApiService","StarWarsApiService","getMovieApparitionsNumber","movieApparitionsCount","add","createdPlanet","links","rel","href","Application","getConfig","applicationHostName","_id","create","find","params","id","ENtend","itens","total","totalResources","update","end","remove","PlanetRepository"],"mappings":"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","file":"planet.controller.js","sourcesContent":["import PlanetRepository from \"../repositories/PlanetRepository\";\r\nimport Planet from \"../models/Planet\";\r\nimport StarWarsApiService from \"../services/starwars.service\";\r\nimport os from 'os';\r\nimport Application from \"../application/Application\";\r\n\r\nconst planetRepository = new PlanetRepository();\r\n\r\nexport async function findAll(request, response) {\r\n    try {\r\n        let planets = await planetRepository.findAll();\r\n        response.json(planets);\r\n    } catch (e) {\r\n        response.status(500).json(e);\r\n    }\r\n}\r\n\r\nexport async function create(request, response) {\r\n    let planet = new Planet();\r\n    planet.name = request.body.name;\r\n    planet.climate = request.body.climate;\r\n    planet.terrain = request.body.terrain;\r\n    console.log(planet);\r\n    try {\r\n        let starWarsApiService = new StarWarsApiService();\r\n        planet.movieApparitionsCount = await starWarsApiService.getMovieApparitionsNumber(planet.name);\r\n        console.log(planet.movieApparitionsCount);\r\n        let createdPlanet = await planetRepository.add(planet);\r\n        createdPlanet[0].links = [{\r\n            rel: 'self',\r\n            href: `${Application.getConfig().applicationHostName}/planets/${createdPlanet._id}`\r\n        }];\r\n\r\n        response.status(201).json(createdPlanet[0]);\r\n    } catch (e) {\r\n        response.status(500).json(e);\r\n    }\r\n}\r\n\r\nexport async function find(request, response) {\r\n    try {\r\n        let planet = await planetRepository.find(request.params.id);\r\n        response.json(planet);\r\n    } catch (e) {\r\n        response.status(500).json(e);\r\n    }\r\n}\r\n\r\nexport async function update(request, response) {\r\n    let planet = new Planet();ENtend\r\n    planet._id = request.body._id;\r\n    planet.itens = request.body.itens;\r\n    planet.total = request.body.total;\r\n    planet.totalResources = request.body.totalResources;\r\n    try {\r\n        await planetRepository.update(planet);\r\n        response.status(200).end();\r\n    } catch (e) {\r\n        response.status(500).json(e);\r\n    }\r\n}\r\n\r\nexport async function remove(request, response) {\r\n    try {\r\n        await planetRepository.remove(request.params.id);\r\n        response.status(200).end();\r\n    } catch (e) {\r\n        response.status(500).json(e);\r\n    }\r\n}"]}